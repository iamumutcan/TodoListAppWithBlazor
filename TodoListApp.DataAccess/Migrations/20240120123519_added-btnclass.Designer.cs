// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TodoListApp.DataAccess.Data;

#nullable disable

namespace TodoAppBlazorDataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240120123519_added-btnclass")]
    partial class addedbtnclass
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TodoAppBlazorDataAccess.TodoStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("btnclass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TodoStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Yapacaklarım",
                            btnclass = "btn btn-warning"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Yapıyorum",
                            btnclass = "btn btn-primary"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "Yaptım",
                            btnclass = "btn btn-success"
                        });
                });

            modelBuilder.Entity("TodoAppBlazorDataAccess.TodoTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("TodoTasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 1, 20, 15, 35, 19, 154, DateTimeKind.Local).AddTicks(1079),
                            IsDeleted = false,
                            StatusId = 1,
                            Text = "İlk görev"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 1, 20, 15, 35, 19, 154, DateTimeKind.Local).AddTicks(1091),
                            IsDeleted = false,
                            StatusId = 2,
                            Text = "İkinci görev"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 1, 20, 15, 35, 19, 154, DateTimeKind.Local).AddTicks(1092),
                            IsDeleted = false,
                            StatusId = 3,
                            Text = "Üçüncü görev"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 1, 20, 15, 35, 19, 154, DateTimeKind.Local).AddTicks(1093),
                            IsDeleted = false,
                            StatusId = 1,
                            Text = "Dördüncü görev"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 1, 20, 15, 35, 19, 154, DateTimeKind.Local).AddTicks(1095),
                            IsDeleted = false,
                            StatusId = 2,
                            Text = "Beşinci görev"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 1, 20, 15, 35, 19, 154, DateTimeKind.Local).AddTicks(1096),
                            IsDeleted = false,
                            StatusId = 3,
                            Text = "Altıncı görev"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 1, 20, 15, 35, 19, 154, DateTimeKind.Local).AddTicks(1097),
                            IsDeleted = false,
                            StatusId = 1,
                            Text = "Yedinci görev"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 1, 20, 15, 35, 19, 154, DateTimeKind.Local).AddTicks(1098),
                            IsDeleted = false,
                            StatusId = 2,
                            Text = "Sekizinci görev"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 1, 20, 15, 35, 19, 154, DateTimeKind.Local).AddTicks(1099),
                            IsDeleted = false,
                            StatusId = 3,
                            Text = "Dokuzuncu görev"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 1, 20, 15, 35, 19, 154, DateTimeKind.Local).AddTicks(1100),
                            IsDeleted = false,
                            StatusId = 1,
                            Text = "Onuncu görev"
                        });
                });

            modelBuilder.Entity("TodoAppBlazorDataAccess.TodoTask", b =>
                {
                    b.HasOne("TodoAppBlazorDataAccess.TodoStatus", "Status")
                        .WithMany("TodoTasks")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");
                });

            modelBuilder.Entity("TodoAppBlazorDataAccess.TodoStatus", b =>
                {
                    b.Navigation("TodoTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
